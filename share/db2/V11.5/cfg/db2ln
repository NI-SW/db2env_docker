#!/bin/sh
#############################################################################
#
# Licensed Materials - Property of IBM
#
# "Restricted Materials of IBM" 
#
# (C) COPYRIGHT IBM Corp. 1993, 2019 All Rights Reserved.
#
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
#
#############################################################################

#
# NAME: db2ln
#
# FUNCTION: Creates symbolic links to /usr/include and /usr/lib/$LIBNAME.
#           Symbolic links to previous versions of DB2 will be removed.
#
# USAGE: db2ln
#
#############################################################################
# Options for "set" command
setopts="${setopts:-+x}"
set ${setopts?}

# Current DB2 installation directory

DB2LOCAL=`echo $DB2LOCAL`

if [ "X${DB2LOCAL?}" != "X" -a  -f ${DB2LOCAL?}/.mount ]; then
   DB2DIR=${DB2LOCAL?}/instance
   curdir=`/bin/pwd`
else
   curdir=`/bin/pwd`
   DB2DIR=`dirname $0`
   cd ${DB2DIR?}
   DB2DIR=`/bin/pwd`
fi

cd ${DB2DIR?}
DB2DIR=`dirname ${DB2DIR?}`
if [ ! -d ${DB2DIR?}/instance ]
then
    DB2DIR=`dirname ${DB2DIR?}`
fi
cfg_tmp="${DB2DIR?}/cfg/installcopy.cfg"
cmd_db2fupdt_tmp="${DB2DIR?}/bin/db2fupdt"
DB2_KEEP_IN_ORIGINAL_DB2DIR="${DB2_KEEP_IN_ORIGINAL_DB2DIR:-FALSE}"

if [ -f "${cfg_tmp?}" -a -f "${cmd_db2fupdt_tmp?}"  -a "X${DB2_KEEP_IN_ORIGINAL_DB2DIR?}" != "XTRUE" ]; then
   db2dir_tmp=`${cmd_db2fupdt_tmp?} -f ${cfg_tmp?} -p DB2DIR`
   if [ $? -eq 0 ]; then
      if [ -d ${db2dir_tmp?} ]; then
         cd ${db2dir_tmp?} 2>/dev/null 1>/dev/null
         if [ $? -eq 0 ]; then
            DB2DIR=`echo ${db2dir_tmp?} | sed 's/\/$//'`
         fi
     fi
   fi
fi 
cd ${curdir?}
unset curdir cfg_tmp cmd_db2fupdt_tmp db2dir_tmp DB2_KEEP_IN_ORIGINAL_DB2DIR

PROGNAME=`basename $0`

. ${DB2DIR?}/instance/db2iutil

#-----------------------------------------------------------------------
# Get the locale.
#-----------------------------------------------------------------------
get_locale

#-----------------------------------------------------------------------
# Process the command.
#-----------------------------------------------------------------------
case ${PROGNAME?} in
    "db2ln")

        BITWIDTH=64
        while getopts :w: optchar; do
            case ${optchar?} in
                w)  # Bit width
                    BITWIDTH="${OPTARG?}"
                    ;;
                ?)  # Bad parameter.  Ignore it.
                    :
                    ;;
            esac
        done
        shift `expr $OPTIND - 1` # Detele all option args

        remove_links /usr/IBMdb2/V5.0         # Install directory for DB2 V5 beta
        remove_links /usr/IBMdb2/V6.1         # Install directory for DB2 V6
        remove_links /usr/IBMdb2/V7.1         # Install directory for DB2 V7

        create_links ${BITWIDTH?}
        ;;

    "db2rmln")
        remove_links ${DB2DIR?}
        ;;
esac

#-----------------------------------------------------------------------
# Exit successfully.
#-----------------------------------------------------------------------
exit 0

